# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: marcelobs96
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: backend
service: mysql-serverless

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    DB_HOST: 127.0.0.1     # Substitua pelo host do seu banco de dados MySQL
    DB_USER: root     # Substitua pelo nome de usu√°rio do banco de dados MySQL
    DB_PASSWORD: ''  # Substitua pela senha do banco de dados MySQL
    DB_NAME: helpinho     # Substitua pelo nome do banco de dados MySQL
    JWT_SECRET: ${env:JWT_SECRET}

functions:
 
  register:
    handler: handler.register
    events:
      - http:
          path: user/register
          method: post

  login:
    handler: handler.login
    events:
      - http:
          path: user/login
          method: post
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: user
          method: post
  getUser:
    handler: handler.getUser
    events:
      - http:
          path: user/{id}
          method: get

authorizer:
    handler: authorizer.handler
    events:
      - http:
          path: users
          method: get
          authorizer:
            name: authorizer
            type: token
            identitySource: 'method.request.header.Authorization'

protectedRoute:
    handler: handler.protectedRoute
    events:
      - http:
          path: /protected
          method: get
          authorizer: 
            name: authenticateToken
            resultTtlInSeconds: 0


plugins:
  - serverless-offline

custom:
  scripts:
    hooks:
      'before:deploy:deploy': npm run migrate

